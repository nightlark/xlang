// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.000000.0
#pragma once
#include "winrt/Component.h"
#include "winrt/Component.Fast.h"
#include "winrt/Component.Result.h"
namespace winrt::Component::Result::factory_implementation
{
    template <typename D, typename T, typename... I>
    struct WINRT_EBO ClassT : implements<D, Windows::Foundation::IActivationFactory, Component::Result::IClassStatics, I...>
    {
        using instance_type = Component::Result::Class;

        hstring GetRuntimeClassName() const
        {
            return L"Component.Result.Class";
        }
        int32_t GetInt32()
        {
            return T::GetInt32();
        }
        hstring GetString()
        {
            return T::GetString();
        }
        Component::Fast::FastClass GetFastClass()
        {
            return T::GetFastClass();
        }
        Component::Fast::SlowClass GetSlowClass()
        {
            return T::GetSlowClass();
        }
        Component::INotExclusive GetInterface()
        {
            return T::GetInterface();
        }
        [[noreturn]] Windows::Foundation::IInspectable ActivateInstance() const
        {
            throw hresult_not_implemented();
        }
    };
}

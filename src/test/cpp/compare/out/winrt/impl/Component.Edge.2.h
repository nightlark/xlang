// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.000000.0
#pragma once
#include "winrt/impl/Component.Edge.1.h"
namespace winrt::Component::Edge
{
    struct WINRT_EBO EmptyClass : Component::Edge::IEmptyClass
    {
        EmptyClass(std::nullptr_t) noexcept {}
        EmptyClass(take_ownership_from_abi_t, void* ptr) noexcept : Component::Edge::IEmptyClass(take_ownership_from_abi, ptr) {}
    };
    struct WINRT_EBO OneClass : Component::Edge::IOneClass
    {
        OneClass(std::nullptr_t) noexcept {}
        OneClass(take_ownership_from_abi_t, void* ptr) noexcept : Component::Edge::IOneClass(take_ownership_from_abi, ptr) {}
        OneClass(int32_t a);
        static void StaticMethod(int32_t a);
    };
    struct StaticClass
    {
        StaticClass() = delete;
        static void StaticMethod();
    };
    struct WINRT_EBO ThreeClass : Component::Edge::IThreeClass
    {
        ThreeClass(std::nullptr_t) noexcept {}
        ThreeClass(take_ownership_from_abi_t, void* ptr) noexcept : Component::Edge::IThreeClass(take_ownership_from_abi, ptr) {}
        ThreeClass(int32_t a, int32_t b, int32_t c);
        static void StaticMethod(int32_t a, int32_t b, int32_t c);
    };
    struct WINRT_EBO TwoClass : Component::Edge::ITwoClass
    {
        TwoClass(std::nullptr_t) noexcept {}
        TwoClass(take_ownership_from_abi_t, void* ptr) noexcept : Component::Edge::ITwoClass(take_ownership_from_abi, ptr) {}
        TwoClass(int32_t a, int32_t b);
        static void StaticMethod(int32_t a, int32_t b);
    };
    struct WINRT_EBO ZeroClass : Component::Edge::IZeroClass
    {
        ZeroClass(std::nullptr_t) noexcept {}
        ZeroClass(take_ownership_from_abi_t, void* ptr) noexcept : Component::Edge::IZeroClass(take_ownership_from_abi, ptr) {}
        ZeroClass();
        static void StaticMethod();
    };
}

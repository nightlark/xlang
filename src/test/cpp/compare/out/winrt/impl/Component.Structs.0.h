// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.000000.0
#pragma once
#include "winrt/base.h"
namespace winrt::Component::Structs
{
    struct Simple;
}
namespace winrt::impl
{
    template <> struct category<Component::Structs::Simple>
    {
        using type = struct_category<uint8_t, uint8_t, uint8_t, uint8_t>;
    };
    template <> struct name<Component::Structs::Simple>
    {
        static constexpr auto & value{ L"Component.Structs.Simple" };
    };
    struct struct_Component_Structs_Simple
    {
        uint8_t A;
        uint8_t R;
        uint8_t G;
        uint8_t B;
    };
    template <> struct abi<Component::Structs::Simple>
    {
        using type = struct_Component_Structs_Simple;
    };
}

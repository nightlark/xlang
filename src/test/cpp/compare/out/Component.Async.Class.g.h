// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.000000.0
#pragma once
#include "winrt/Component.Async.h"
#include "winrt/Windows.Foundation.h"
namespace winrt::Component::Async::factory_implementation
{
    template <typename D, typename T, typename... I>
    struct WINRT_EBO ClassT : implements<D, Windows::Foundation::IActivationFactory, Component::Async::IClassStatics, I...>
    {
        using instance_type = Component::Async::Class;

        hstring GetRuntimeClassName() const
        {
            return L"Component.Async.Class";
        }
        Windows::Foundation::IAsyncAction Action()
        {
            return T::Action();
        }
        Windows::Foundation::IAsyncActionWithProgress<int32_t> ActionWithProgress()
        {
            return T::ActionWithProgress();
        }
        Windows::Foundation::IAsyncOperation<hstring> Operation()
        {
            return T::Operation();
        }
        Windows::Foundation::IAsyncOperationWithProgress<hstring, int32_t> OperationWithProgress()
        {
            return T::OperationWithProgress();
        }
        [[noreturn]] Windows::Foundation::IInspectable ActivateInstance() const
        {
            throw hresult_not_implemented();
        }
    };
}
